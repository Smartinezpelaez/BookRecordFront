@page "/Libro/InsertLibro"
@using System.Net.Http.Json
@using System.Text.Json
@using BookRecord.WEB.DTOs;
@using BookRecord.WEB.Services;
@using BookRecord.WEB.Models;
@using System.Text
@using MudBlazor
@using Newtonsoft.Json;
@using MudBlazor.Extensions
@inject NavigationManager NavManager
@inject LibrosServices librosServices

<h3>Agregar un Libro</h3>

@if (Libros != null)
{
    <form @onsubmit="async () => await Submit()">
        <div>
            <label for="LibroId">Codigo del libro:</label>
            <input type="number" id="LibroId" @bind-value="libro.LibroId" />

            <label for="Titulo">Titulo:</label>
            <input type="text" id="Titulo" @bind-value="libro.Titulo" />

            <label for="Anio">Año:</label>
            <input type="number" id="Anio" @bind-value="libro.Anio" />

            <label for="Genero">Genero:</label>
            <input type="text" id="Genero" @bind-value="libro.Genero" />

            <label for="NumPaginas">Número de paginas:</label>
            <input type="text" id="NumPaginas" @bind-value="libro.NumPaginas" />

            <label for="autorId">Id de Autor:</label>
            <select id="autorId" name="autorId" @bind="libro.AutorId">
                @foreach (var autor in Libros)
                {
                    <option value="@autor.AutorId">@autor.AutorId</option>

                }
            </select>
           @*  <label for="AutorId">Id autor:</label>
            <input type="number" id="AutorId" @bind-value="libro.AutorId" /> *@

            <!-- Si necesitas enviar el AutorId pero no mostrarlo, puedes incluir un campo oculto -->
            <!-- <input type="hidden" id="AutorId" name="AutorId" value="@autors.AutorId" /> -->
        </div>

        <button type="submit">Guardar Autor</button>
        <button type="button" onclick="@GoToIndex">Volver al índice</button>
    </form>
}
else
{
    <p>Cargando datos...</p>
}

@code {
    private List<LibroDTO> Libros;
    LibroDTO libro = new();
  
    private void GoToIndex()
    {
        NavManager.NavigateTo("Libro/GetLibro");
    }

    protected override async Task OnInitializedAsync()
    {
        // Obtener la lista completa de autores.
        Libros = await librosServices.GetBook();
    }

    private async Task Submit()
    {
        libro = await librosServices.InsertBook(libro);
        NavManager.NavigateTo("Libro/GetLibro");

    }

}
